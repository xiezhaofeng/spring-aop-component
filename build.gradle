def nexusurl = System.getProperty("nexusurl") ?: "${nexusurldefault}"

def devrepourl="${nexusurl}/repository/maven-snapshots/"
def relrepourl="${nexusurl}/repository/maven-releases/"
def pubrepourl= "${nexusurl}/repository/maven-public/"

println "nexus url : ${nexusurl}"

buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
		nexusurl = System.getProperty("nexusurl") ?: "http://192.168.81.66:8081/"
		pubrepourl= "${nexusurl}/repository/maven-public/"
	}
	repositories {
		mavenLocal()
		maven { url "${pubrepourl}" }
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'idea'


group = "com.rop"
def artifactId = "spring-aop-component"


version = "1.0.6"



def paramRelease =  project.properties.get("release")
if("${paramRelease}" != "null"){
	version = version.replace("-SNAPSHOT","")
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

def repourl=devrepourl

if (!version.contains("SNAPSHOT")){
  repourl=relrepourl
}


repositories {
	mavenLocal()
	maven { url "${pubrepourl}" }
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	mavenCentral()
}

configurations {
	providedRuntime
	all*.exclude module: 'spring-boot-devtools'
	all*.exclude group: 'javax.persistence', module: 'persistence-api'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
 
artifacts {
    archives sourcesJar
}

 sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}
def jacksonVersion="2.9.6"

dependencies {
	compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")

	//lombok
	compile "org.projectlombok:lombok:1.16.16"

	// fasterxml jackson
   	compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
   	compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
   	compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}"
   	compile "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"
   	compile "javax.validation:validation-api:1.1.0.Final"
   	
	//ruyue coach common
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}
//gradle profiles param
def pro =  project.properties.get("springProfiles")

if("${pro}" != "null"){
    test.systemProperty "spring.profiles.active", "${pro}"
	println "spring.profiles.active=${pro}"
}

task showTestTaskClasspath << {
  test.classpath.each { println it }
}

task fatJar(type: Jar) {
	baseName = "$artifactId"
	version = "$project.version"
	exclude('config')
	exclude('error*')
//    from {configurations.compile.filter{!it.name.startsWith('ry-coach-common') && !it.name.startsWith('lombok')}.collect { it.isDirectory() ? it : zipTree(it)}}
    with jar
}
bootJar{
	baseName = "$artifactId"
	version = "$project.version"
}

install{
    repositories{
    	mavenInstaller {
	        pom.version = "$project.version"
	        pom.artifactId = "$artifactId"
	        pom.groupId = "$project.group"
	    }
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: repourl)
            {
                authentication(userName: "$nexususer", password: "$nexuspwd")
            }
            pom.version = "$project.version"
            pom.artifactId = "$artifactId"
            pom.groupId = "$project.group"
        }
    }
}
//fatJar.dependsOn javadocJar
fatJar.mustRunAfter jar
install.dependsOn fatJar
uploadArchives.dependsOn install